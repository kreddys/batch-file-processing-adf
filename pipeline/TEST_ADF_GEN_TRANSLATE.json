{
	"name": "TEST_ADF_GEN_TRANSLATE",
	"properties": {
		"activities": [
			{
				"name": "Copy to AFS",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"wildcardFolderPath": {
								"value": "@pipeline().parameters.FileLocation",
								"type": "Expression"
							},
							"wildcardFileName": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureFileStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ADF_GEN_ABS_SOURCE",
						"type": "DatasetReference",
						"parameters": {
							"storageAccountName": {
								"value": "@pipeline().globalParameters.WORKINGDATA_STORAGE_ACCOUNT",
								"type": "Expression"
							},
							"storageAccountKeySecretName": {
								"value": "@pipeline().globalParameters.SA_KEY_SECRET_NAME",
								"type": "Expression"
							},
							"container": {
								"value": "@pipeline().globalParameters.WORKINGDATA_FILE_SHARE",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ADF_GEN_AFS_SINK",
						"type": "DatasetReference",
						"parameters": {
							"akvSecretname": {
								"value": "@pipeline().globalParameters.ITX_DATA_STORAGE_ACCOUNT_AKV_SECRET_NAME",
								"type": "Expression"
							},
							"storageAccount": {
								"value": "@pipeline().globalParameters.ITX_DATA_STORAGE_ACCOUNT",
								"type": "Expression"
							},
							"fileShare": {
								"value": "@pipeline().globalParameters.ITX_DATA_STORAGE_ACCOUNT_FILESHARE",
								"type": "Expression"
							},
							"filePath": {
								"value": "@replace(pipeline().parameters.FileLocation,pipeline().globalParameters.WORKINGDATA_ROOT_DIR,pipeline().globalParameters.ITX_DATA_STORAGE_ACCOUNT_FILESHARE_ROOTDIR)",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lookup ADFBatchTranslate",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy to AFS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureTableSource",
						"azureTableSourceQuery": {
							"value": "@concat('Producer eq ''',pipeline().parameters.Producer,\r\n''' and TransactionType eq ''',pipeline().parameters.TransactionType,\r\n''' and Consumer eq ''',pipeline().parameters.Consumer,\r\n'''')",
							"type": "Expression"
						},
						"azureTableSourceIgnoreTableNotFound": false
					},
					"dataset": {
						"referenceName": "ADF_GEN_ATS",
						"type": "DatasetReference",
						"parameters": {
							"atsTableName": {
								"value": "@pipeline().globalParameters.CODELISTS_BATCH_TRANSLATE",
								"type": "Expression"
							},
							"akvBaseURL": {
								"value": "@pipeline().globalParameters.AKV_BASE_URL",
								"type": "Expression"
							},
							"atsStorageAccountKeySecretName": {
								"value": "@pipeline().globalParameters.SA_KEY_SECRET_NAME",
								"type": "Expression"
							},
							"atsStorageAccountName": {
								"value": "@pipeline().globalParameters.CODELISTS_STORAGE_ACCOUNT",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "ForEach OutptutCard",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup ADFBatchTranslate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@split(activity('Lookup ADFBatchTranslate').output.firstRow.DeliverOutputCards,',')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Append Output",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Output",
								"value": {
									"value": "{\"cardNumber\": @{item()},\"source\": \"FILE\",\"file\": \"@{concat(pipeline().parameters.FileLocation,'/out/','out',string(item()))}\"}",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set MapRequest",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach OutptutCard",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "MapRequest",
					"value": {
						"value": "{\n        \"itxUri\": \"@{pipeline().globalParameters.ITX_RS_URI}\",\n        \"map\": {\n            \"name\": \"@{activity('Lookup ADFBatchTranslate').output.firstRow.MapName}\",\n            \"audit\": false,\n            \"trace\": false,\n            \"waitSeconds\": @{pipeline().globalParameters.ITX_RS_RUNMAP_WAITSECONDS},\n            \"maxRetries\": @{pipeline().globalParameters.ITX_RS_RUNMAP_MAXRETRIES},\n            \"inputs\": [\n                {\n                    \"cardNumber\": 1,\n                    \"source\": \"FILE\",\n                    \"file\": \"@{concat('/',pipeline().parameters.FileLocation,'/',pipeline().parameters.FileName)}\"\n                }\n            ],\n            \"outputs\": [@{replace(join(variables('Output'),','),'//','')}]\n        }\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ITX Async WebHook",
				"type": "WebHook",
				"dependsOn": [
					{
						"activity": "Set MapRequest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"url": "https://e875-2600-1700-3220-3680-6930-6d64-aaf6-23b9.ngrok.io/api/ItxAsync_HttpStart",
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"value": "@json(variables('MapRequest'))",
						"type": "Expression"
					},
					"timeout": "00:1:00",
					"reportStatusOnCallBack": true
				}
			}
		],
		"parameters": {
			"FileLocation": {
				"type": "string",
				"defaultValue": "WorkingDir/bcbad2a1-6999-408a-83ae-865b4ee18a07/5c2a12dc-47a4-4979-a91c-3a0813952b59"
			},
			"FileName": {
				"type": "string",
				"defaultValue": "employees.json"
			},
			"Consumer": {
				"type": "string",
				"defaultValue": "EVICORE-MBR"
			},
			"Producer": {
				"type": "string",
				"defaultValue": "TEMPPARTNER"
			},
			"TransactionType": {
				"type": "string",
				"defaultValue": "MBR"
			}
		},
		"variables": {
			"MapRequest": {
				"type": "String"
			},
			"Output": {
				"type": "Array"
			},
			"Json": {
				"type": "Array"
			},
			"Outputs": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "TEST"
		},
		"annotations": []
	}
}