{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "itx-adf5214"
		},
		"ADF_GEN_ABS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ADF_GEN_ABS'",
			"defaultValue": "DefaultEndpointsProtocol=https;AccountName=@{linkedService().storageAccountName};"
		},
		"ADF_GEN_AFS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ADF_GEN_AFS'",
			"defaultValue": "DefaultEndpointsProtocol=https;AccountName=@{linkedService().storageAccount};"
		},
		"ADF_GEN_ATS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ADF_GEN_ATS'",
			"defaultValue": "DefaultEndpointsProtocol=https;AccountName=@{linkedService().storageAccountName};"
		},
		"TEST_AFS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TEST_AFS'",
			"defaultValue": "DefaultEndpointsProtocol=https;AccountName=@{linkedService().storageAccount};"
		},
		"ADF_GEN_AKV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://adf-gen-akv.vault.azure.net/"
		},
		"ADF_GEN_FUNCTION_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().functionAppURL}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_COLLECT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Check FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json(activity('Check FileName').output.Response)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy To WorkingDir",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ADF_GEN_COPY_FILE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SOURCE_TYPE": {
												"value": "@pipeline().parameters.Protocol",
												"type": "Expression"
											},
											"SOURCE_STORAGE_ACCOUNT": {
												"value": "@pipeline().parameters.ReceiptConfig.StorageAccount",
												"type": "Expression"
											},
											"SOURCE_AKV_SECRET_NAME": {
												"value": "@pipeline().globalParameters.SA_KEY_SECRET_NAME",
												"type": "Expression"
											},
											"SOURCE_FILESHARE": {
												"value": "@pipeline().parameters.ReceiptConfig.FileShare",
												"type": "Expression"
											},
											"SOURCE_COLLECTION_DIR": {
												"value": "@pipeline().parameters.ReceiptConfig.CollectionDirectory",
												"type": "Expression"
											},
											"SOURCE_FILEMASK": {
												"value": "@item()",
												"type": "Expression"
											},
											"SOURCE_FILE_MODIFIED_THRESHOLD": {
												"value": "@pipeline().parameters.ReceiptConfig.FileModifiedThreshold",
												"type": "Expression"
											},
											"SOURCE_DELETE_AFTER_COLLECT": {
												"value": "@pipeline().parameters.ReceiptConfig.DeleteAfterCollect",
												"type": "Expression"
											},
											"SOURCE_COLLECT_FROM_SUBFOLDERS": {
												"value": "@pipeline().parameters.ReceiptConfig.CollectFromSubFolders",
												"type": "Expression"
											},
											"SINK_TYPE": {
												"value": "@pipeline().globalParameters.WORKING_DATA_PROTOCOL",
												"type": "Expression"
											},
											"SINK_STORAGE_ACCOUNT": {
												"value": "@pipeline().globalParameters.WORKINGDATA_STORAGE_ACCOUNT",
												"type": "Expression"
											},
											"SINK_AKV_SECRET_NAME": {
												"value": "@pipeline().globalParameters.SA_KEY_SECRET_NAME",
												"type": "Expression"
											},
											"SINK_FILESHARE": {
												"value": "@pipeline().globalParameters.WORKINGDATA_FILE_SHARE",
												"type": "Expression"
											},
											"SINK_FILEPATH": {
												"value": "@concat(pipeline().globalParameters.WORKINGDATA_ROOT_DIR,pipeline()?.TriggeredByPipelineRunId,'/')",
												"type": "Expression"
											},
											"COPY_TYPE": "WORKING_DIR"
										}
									}
								},
								{
									"name": "Lookup ArchiveProducer",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy To WorkingDir",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureTableSource",
											"azureTableSourceQuery": {
												"value": "@concat('Producer eq ''',pipeline().parameters.ReceiptConfig.Producer,''' and TransactionType eq ''',pipeline().parameters.ReceiptConfig.TransactionType,''' and ConfigId eq ',pipeline().parameters.ReceiptConfig.ConfigID,'')",
												"type": "Expression"
											},
											"azureTableSourceIgnoreTableNotFound": false
										},
										"dataset": {
											"referenceName": "ADF_GEN_ATS",
											"type": "DatasetReference",
											"parameters": {
												"atsTableName": {
													"value": "@pipeline().globalParameters.CODELISTS_ARCHIVE_PRODUCER_TABLE",
													"type": "Expression"
												},
												"akvBaseURL": {
													"value": "@pipeline().globalParameters.AKV_BASE_URL",
													"type": "Expression"
												},
												"atsStorageAccountKeySecretName": {
													"value": "@pipeline().globalParameters.SA_KEY_SECRET_NAME",
													"type": "Expression"
												},
												"atsStorageAccountName": {
													"value": "@pipeline().globalParameters.CODELISTS_STORAGE_ACCOUNT",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Get WokingDirFilePath",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup ArchiveProducer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://management.azure.com/subscriptions/@{pipeline().globalParameters.SUBSCRIPTION_ID}/resourceGroups/@{pipeline().globalParameters.RESOURCE_GROUP_NAME}/providers/Microsoft.DataFactory/factories/@{pipeline().DataFactory}/pipelineruns/@{activity('Copy To WorkingDir').output.pipelineRunId}/queryActivityruns?api-version=2018-06-01",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"lastUpdatedAfter\":\"\",\n    \"lastUpdatedBefore\":\"@{utcNow()}\",\n        \"filters\": [\n\t\t{\n\t\t\t\"operand\": \"ActivityName\",\n\t\t\t\"operator\": \"Equals\",\n\t\t\t\"values\": [\n\t\t\t\t\"Set SINK_FILE_PATH\"\n\t\t\t]\n\t\t}\n\t]\n}",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": {
												"value": "@pipeline().globalParameters.RESOURCE",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Copy To Archive",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Get WokingDirFilePath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ADF_GEN_COPY_FILE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SOURCE_TYPE": {
												"value": "@pipeline().globalParameters.WORKING_DATA_PROTOCOL",
												"type": "Expression"
											},
											"SOURCE_STORAGE_ACCOUNT": {
												"value": "@pipeline().globalParameters.WORKINGDATA_STORAGE_ACCOUNT",
												"type": "Expression"
											},
											"SOURCE_AKV_SECRET_NAME": {
												"value": "@pipeline().globalParameters.SA_KEY_SECRET_NAME",
												"type": "Expression"
											},
											"SOURCE_FILESHARE": {
												"value": "@pipeline().globalParameters.WORKINGDATA_FILE_SHARE",
												"type": "Expression"
											},
											"SOURCE_COLLECTION_DIR": {
												"value": "@activity('Get WokingDirFilePath').output.value[0].output.value",
												"type": "Expression"
											},
											"SOURCE_FILEMASK": {
												"value": "@item()",
												"type": "Expression"
											},
											"SOURCE_FILE_MODIFIED_THRESHOLD": {
												"value": "@pipeline().parameters.ReceiptConfig.FileModifiedThreshold",
												"type": "Expression"
											},
											"SOURCE_DELETE_AFTER_COLLECT": {
												"value": "false",
												"type": "Expression"
											},
											"SOURCE_COLLECT_FROM_SUBFOLDERS": {
												"value": "@pipeline().parameters.ReceiptConfig.CollectFromSubFolders",
												"type": "Expression"
											},
											"SINK_TYPE": {
												"value": "@activity('Lookup ArchiveProducer').output.firstRow.Type",
												"type": "Expression"
											},
											"SINK_STORAGE_ACCOUNT": {
												"value": "@activity('Lookup ArchiveProducer').output.firstRow.StorageAccount",
												"type": "Expression"
											},
											"SINK_AKV_SECRET_NAME": {
												"value": "@pipeline().globalParameters.SA_KEY_SECRET_NAME",
												"type": "Expression"
											},
											"SINK_FILESHARE": {
												"value": "@activity('Lookup ArchiveProducer').output.firstRow.FileShare",
												"type": "Expression"
											},
											"SINK_FILEPATH": {
												"value": "@activity('Lookup ArchiveProducer').output.firstRow.Directory",
												"type": "Expression"
											},
											"COPY_TYPE": "ARCHIVE"
										}
									}
								}
							]
						}
					},
					{
						"name": "Check FileName",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@pipeline().globalParameters.REGEX_FILENAME_MATCH_FUNCTION_NAME",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(concat('{\"files\":',string(pipeline().parameters.FileList),',\"pattern\": \"',string(pipeline().parameters.ReceiptConfig.FileMask),'\"'))",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_GEN_FUNCTION",
							"type": "LinkedServiceReference",
							"parameters": {
								"functionAppURL": {
									"value": "@pipeline().globalParameters.REGEX_FILENAME_MATCH_FUNCTION_APP_URL",
									"type": "Expression"
								},
								"secretName": {
									"value": "@pipeline().globalParameters.REGEX_FILENAME_MATCH_FUNCTION_SECRET_NAME",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileList": {
						"type": "array"
					},
					"ReceiptConfig": {
						"type": "object"
					},
					"Protocol": {
						"type": "string"
					}
				},
				"variables": {
					"SINK_FILE_PATH": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GENERIC"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-02T01:16:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_FUNCTION')]",
				"[concat(variables('factoryId'), '/pipelines/ADF_GEN_COPY_FILE')]",
				"[concat(variables('factoryId'), '/datasets/ADF_GEN_ATS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_COPY_FILE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set SINK_FILE_PATH",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Check Source and Sink",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SINK_FILE_PATH",
							"value": {
								"value": "@if(equals(pipeline().parameters.COPY_TYPE,'WORKING_DIR' ),concat(pipeline().parameters.SINK_FILEPATH,pipeline().RunId) , pipeline().parameters.SINK_FILEPATH)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check Source and Sink",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@concat(pipeline().parameters.SOURCE_TYPE,'_',\npipeline().parameters.SINK_TYPE)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "AFS_AFS",
									"activities": [
										{
											"name": "Copy AFS_AFS",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "BinarySource",
													"storeSettings": {
														"type": "AzureFileStorageReadSettings",
														"recursive": {
															"value": "@pipeline().parameters.SOURCE_COLLECT_FROM_SUBFOLDERS",
															"type": "Expression"
														},
														"wildcardFolderPath": {
															"value": "@pipeline().parameters.SOURCE_COLLECTION_DIR",
															"type": "Expression"
														},
														"wildcardFileName": {
															"value": "@pipeline().parameters.SOURCE_FILEMASK",
															"type": "Expression"
														},
														"deleteFilesAfterCompletion": {
															"value": "@pipeline().parameters.SOURCE_DELETE_AFTER_COLLECT",
															"type": "Expression"
														}
													},
													"formatSettings": {
														"type": "BinaryReadSettings"
													}
												},
												"sink": {
													"type": "BinarySink",
													"storeSettings": {
														"type": "AzureFileStorageWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ADF_GEN_AFS_SOURCE",
													"type": "DatasetReference",
													"parameters": {
														"akvSecretname": {
															"value": "@pipeline().parameters.SOURCE_AKV_SECRET_NAME",
															"type": "Expression"
														},
														"storageAccount": {
															"value": "@pipeline().parameters.SOURCE_STORAGE_ACCOUNT",
															"type": "Expression"
														},
														"fileShare": {
															"value": "@pipeline().parameters.SOURCE_FILESHARE",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ADF_GEN_AFS_SINK",
													"type": "DatasetReference",
													"parameters": {
														"akvSecretname": {
															"value": "@pipeline().parameters.SINK_AKV_SECRET_NAME",
															"type": "Expression"
														},
														"storageAccount": {
															"value": "@pipeline().parameters.SINK_STORAGE_ACCOUNT",
															"type": "Expression"
														},
														"fileShare": {
															"value": "@pipeline().parameters.SINK_FILESHARE",
															"type": "Expression"
														},
														"filePath": {
															"value": "@if(equals(pipeline().parameters.COPY_TYPE,'WORKING_DIR' ),concat(pipeline().parameters.SINK_FILEPATH,pipeline().RunId) , pipeline().parameters.SINK_FILEPATH)",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "AFS_ABS",
									"activities": [
										{
											"name": "Copy AFS_ABS",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "BinarySource",
													"storeSettings": {
														"type": "AzureFileStorageReadSettings",
														"recursive": {
															"value": "@pipeline().parameters.SOURCE_COLLECT_FROM_SUBFOLDERS",
															"type": "Expression"
														},
														"wildcardFolderPath": {
															"value": "@pipeline().parameters.SOURCE_COLLECTION_DIR",
															"type": "Expression"
														},
														"wildcardFileName": {
															"value": "@pipeline().parameters.SOURCE_FILEMASK",
															"type": "Expression"
														},
														"deleteFilesAfterCompletion": {
															"value": "@pipeline().parameters.SOURCE_DELETE_AFTER_COLLECT",
															"type": "Expression"
														}
													},
													"formatSettings": {
														"type": "BinaryReadSettings"
													}
												},
												"sink": {
													"type": "BinarySink",
													"storeSettings": {
														"type": "AzureBlobStorageWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ADF_GEN_AFS_SOURCE",
													"type": "DatasetReference",
													"parameters": {
														"akvSecretname": {
															"value": "@pipeline().parameters.SOURCE_AKV_SECRET_NAME",
															"type": "Expression"
														},
														"storageAccount": {
															"value": "@pipeline().parameters.SOURCE_STORAGE_ACCOUNT",
															"type": "Expression"
														},
														"fileShare": {
															"value": "@pipeline().parameters.SOURCE_FILESHARE",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ADF_GEN_ABS_SINK",
													"type": "DatasetReference",
													"parameters": {
														"storageAccountName": {
															"value": "@pipeline().parameters.SINK_STORAGE_ACCOUNT",
															"type": "Expression"
														},
														"storageAccountKeySecretName": {
															"value": "@pipeline().parameters.SINK_AKV_SECRET_NAME",
															"type": "Expression"
														},
														"container": {
															"value": "@pipeline().parameters.SINK_FILESHARE",
															"type": "Expression"
														},
														"directory": {
															"value": "@if(equals(pipeline().parameters.COPY_TYPE,'WORKING_DIR' ),concat(pipeline().parameters.SINK_FILEPATH,pipeline().RunId) , pipeline().parameters.SINK_FILEPATH)",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "ABS_AFS",
									"activities": [
										{
											"name": "Copy ABS_AFS",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "BinarySource",
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": {
															"value": "@pipeline().parameters.SOURCE_COLLECT_FROM_SUBFOLDERS",
															"type": "Expression"
														},
														"wildcardFolderPath": {
															"value": "@pipeline().parameters.SOURCE_COLLECTION_DIR",
															"type": "Expression"
														},
														"wildcardFileName": {
															"value": "@pipeline().parameters.SOURCE_FILEMASK",
															"type": "Expression"
														},
														"deleteFilesAfterCompletion": {
															"value": "@pipeline().parameters.SOURCE_DELETE_AFTER_COLLECT",
															"type": "Expression"
														}
													},
													"formatSettings": {
														"type": "BinaryReadSettings"
													}
												},
												"sink": {
													"type": "BinarySink",
													"storeSettings": {
														"type": "AzureFileStorageWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ADF_GEN_ABS_SOURCE",
													"type": "DatasetReference",
													"parameters": {
														"storageAccountName": {
															"value": "@pipeline().parameters.SOURCE_STORAGE_ACCOUNT",
															"type": "Expression"
														},
														"storageAccountKeySecretName": {
															"value": "@pipeline().parameters.SOURCE_AKV_SECRET_NAME",
															"type": "Expression"
														},
														"container": {
															"value": "@pipeline().parameters.SOURCE_FILESHARE",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ADF_GEN_AFS_SINK",
													"type": "DatasetReference",
													"parameters": {
														"akvSecretname": {
															"value": "@pipeline().parameters.SINK_AKV_SECRET_NAME",
															"type": "Expression"
														},
														"storageAccount": {
															"value": "@pipeline().parameters.SINK_STORAGE_ACCOUNT",
															"type": "Expression"
														},
														"fileShare": {
															"value": "@pipeline().parameters.SINK_FILESHARE",
															"type": "Expression"
														},
														"filePath": {
															"value": "@if(equals(pipeline().parameters.COPY_TYPE,'WORKING_DIR' ),concat(pipeline().parameters.SINK_FILEPATH,pipeline().RunId) , pipeline().parameters.SINK_FILEPATH)",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SOURCE_TYPE": {
						"type": "string"
					},
					"SOURCE_STORAGE_ACCOUNT": {
						"type": "string"
					},
					"SOURCE_AKV_SECRET_NAME": {
						"type": "string"
					},
					"SOURCE_FILESHARE": {
						"type": "string"
					},
					"SOURCE_COLLECTION_DIR": {
						"type": "string"
					},
					"SOURCE_FILEMASK": {
						"type": "string"
					},
					"SOURCE_FILE_MODIFIED_THRESHOLD": {
						"type": "int"
					},
					"SOURCE_DELETE_AFTER_COLLECT": {
						"type": "bool"
					},
					"SOURCE_COLLECT_FROM_SUBFOLDERS": {
						"type": "bool"
					},
					"SINK_TYPE": {
						"type": "string"
					},
					"SINK_STORAGE_ACCOUNT": {
						"type": "string"
					},
					"SINK_AKV_SECRET_NAME": {
						"type": "string"
					},
					"SINK_FILESHARE": {
						"type": "string"
					},
					"SINK_FILEPATH": {
						"type": "string"
					},
					"COPY_TYPE": {
						"type": "string"
					}
				},
				"variables": {
					"SINK_FILE_PATH": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GENERIC"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-02T01:46:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADF_GEN_AFS_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/ADF_GEN_AFS_SINK')]",
				"[concat(variables('factoryId'), '/datasets/ADF_GEN_ABS_SINK')]",
				"[concat(variables('factoryId'), '/datasets/ADF_GEN_ABS_SOURCE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_RECEIPT_AFS_TEMPPARTNER_MBR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SetProtocol",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ADF_PROTOCOL",
							"value": {
								"value": "@split(pipeline().Pipeline,'_')[2]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetProducer",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SetProtocol",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ADF_PRODUCER",
							"value": {
								"value": "@split(pipeline().Pipeline,'_')[3]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTransType",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SetProducer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ADF_TRANSTYPE",
							"value": {
								"value": "@split(pipeline().Pipeline,'_')[4]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach ReceiptConfig",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup ADFReceipt Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup ADFReceipt Table').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Collect Files",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Get FileList Output",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ADF_GEN_COLLECT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileList": {
												"value": "@activity('Get FileList Output').output.value[0].output.childItems",
												"type": "Expression"
											},
											"ReceiptConfig": {
												"value": "@item()",
												"type": "Expression"
											},
											"Protocol": {
												"value": "@variables('ADF_PROTOCOL')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Get FileList Output",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Check Protocol",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://management.azure.com/subscriptions/@{pipeline().globalParameters.SUBSCRIPTION_ID}/resourceGroups/@{pipeline().globalParameters.RESOURCE_GROUP_NAME}/providers/Microsoft.DataFactory/factories/@{pipeline().DataFactory}/pipelineruns/@{pipeline().RunId}/queryActivityruns?api-version=2018-06-01",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"lastUpdatedAfter\":\"\",\n    \"lastUpdatedBefore\":\"@{utcNow()}\",\n        \"filters\": [\n\t\t{\n\t\t\t\"operand\": \"ActivityName\",\n\t\t\t\"operator\": \"Equals\",\n\t\t\t\"values\": [\n\t\t\t\t\"GetFileList@{variables('ADF_PROTOCOL')}\"\n\t\t\t]\n\t\t}\n\t]\n}",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": {
												"value": "@pipeline().globalParameters.RESOURCE",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Check Protocol",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@variables('ADF_PROTOCOL')",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "AFS",
												"activities": [
													{
														"name": "GetFileListAFS",
														"type": "GetMetadata",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataset": {
																"referenceName": "ADF_GEN_AFS_SINK",
																"type": "DatasetReference",
																"parameters": {
																	"akvSecretname": {
																		"value": "@pipeline().globalParameters.SA_KEY_SECRET_NAME",
																		"type": "Expression"
																	},
																	"storageAccount": {
																		"value": "@item().StorageAccount",
																		"type": "Expression"
																	},
																	"fileShare": {
																		"value": "@item().FileShare",
																		"type": "Expression"
																	},
																	"filePath": {
																		"value": "@item().CollectionDirectory",
																		"type": "Expression"
																	}
																}
															},
															"fieldList": [
																"childItems"
															],
															"storeSettings": {
																"type": "AzureFileStorageReadSettings",
																"recursive": true,
																"enablePartitionDiscovery": false
															},
															"formatSettings": {
																"type": "BinaryReadSettings"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Lookup ADFReceipt Table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetTransType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "@concat('Producer eq ''',variables('ADF_PRODUCER'),''' and TransactionType eq ''',variables('ADF_TRANSTYPE'),'''')",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "ADF_GEN_ATS",
								"type": "DatasetReference",
								"parameters": {
									"atsTableName": {
										"value": "@if(equals(variables('ADF_PROTOCOL'),'AFS'),\npipeline().globalParameters.CODELISTS_AFS_RECEIPT_TABLE,'NA')",
										"type": "Expression"
									},
									"akvBaseURL": {
										"value": "@pipeline().globalParameters.AKV_BASE_URL",
										"type": "Expression"
									},
									"atsStorageAccountKeySecretName": {
										"value": "@pipeline().globalParameters.SA_KEY_SECRET_NAME",
										"type": "Expression"
									},
									"atsStorageAccountName": {
										"value": "@pipeline().globalParameters.CODELISTS_STORAGE_ACCOUNT",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"EVC_PROTOCOL": {
						"type": "String"
					},
					"ADF_PRODUCER": {
						"type": "String"
					},
					"ADF_TRANSTYPE": {
						"type": "String"
					},
					"ADF_PROTOCOL": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PARTNER_SPECIFIC"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-02T01:46:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADF_GEN_ATS')]",
				"[concat(variables('factoryId'), '/pipelines/ADF_GEN_COLLECT')]",
				"[concat(variables('factoryId'), '/datasets/ADF_GEN_AFS_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_COPY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "TEMPPARTNER/MBR/RawData",
									"wildcardFileName": "TempPartner_T_I_*.txt",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "TEST_AFS_SOURCE",
								"type": "DatasetReference",
								"parameters": {
									"akvBaseURL": "https://adf-gen-akv.vault.azure.net/",
									"akvSecretname": "adfsa5214AccountKey",
									"storageAccount": "adfsa5214",
									"fileShare": "adf-data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TEST_AFS_SINK",
								"type": "DatasetReference",
								"parameters": {
									"akvBaseURL": "https://adf-gen-akv.vault.azure.net/",
									"akvSecretname": "adfsa5214AccountKey",
									"storageAccount": "adfsa5214",
									"fileShare": "working",
									"filePath": "WorkingDir"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-27T17:38:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TEST_AFS_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/TEST_AFS_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FUNCTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "RegexFileNameMatch",
							"method": "POST",
							"headers": {},
							"body": {
								"files": [
									{
										"name": "Archive",
										"type": "Folder"
									},
									{
										"name": "TempPartner_F_I_20221127.txt",
										"type": "File"
									},
									{
										"name": "TempPartner_C_I_20221127.txt",
										"type": "File"
									},
									{
										"name": "TempPartner_T_I_20221128.txt",
										"type": "File"
									}
								],
								"pattern": "TempPartner_T_I_.+.txt$"
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_GEN_FUNCTION",
							"type": "LinkedServiceReference",
							"parameters": {
								"functionAppURL": "https://regexfilenamematch5214.azurewebsites.net",
								"secretName": {
									"value": "@pipeline().globalParameters.REGEX_FILENAME_MATCH_FUNCTION_SECRET_NAME",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-01T02:20:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_FUNCTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_GET_PIPELINE_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://management.azure.com/subscriptions/@{pipeline().parameters.SubscriptionId}/resourceGroups/@{pipeline().parameters.ResourceGroupName}/providers/Microsoft.DataFactory/factories/@{pipeline().parameters.DataFactoryName}/pipelineruns/@{pipeline().parameters.PipelineRunId}/queryActivityruns?api-version=2018-06-01",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"lastUpdatedAfter": "2018-06-16T00:36:44.3345758Z",
								"lastUpdatedBefore": "2023-06-16T00:49:48.3686473Z"
							},
							"authentication": {
								"type": "MSI",
								"resource": {
									"value": "@pipeline().parameters.Resource",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SubscriptionId": {
						"type": "string",
						"defaultValue": "7344a1c7-35fe-48aa-9793-8b6968225662"
					},
					"ResourceGroupName": {
						"type": "string",
						"defaultValue": "adf"
					},
					"DataFactoryName": {
						"type": "string",
						"defaultValue": "itx-adf5214"
					},
					"PipelineRunId": {
						"type": "string",
						"defaultValue": "8395084c-f9e5-40d9-b3f3-25bbb24ac96e"
					},
					"Resource": {
						"type": "string",
						"defaultValue": "https://management.azure.com"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_ABS_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADF_GEN_ABS",
					"type": "LinkedServiceReference",
					"parameters": {
						"storageAccountName": {
							"value": "@dataset().storageAccountName",
							"type": "Expression"
						},
						"storageAccountKeySecretName": {
							"value": "@dataset().storageAccountKeySecretName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"storageAccountName": {
						"type": "string"
					},
					"storageAccountKeySecretName": {
						"type": "string"
					},
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GENERIC"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_ABS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_ABS_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADF_GEN_ABS",
					"type": "LinkedServiceReference",
					"parameters": {
						"storageAccountName": {
							"value": "@dataset().storageAccountName",
							"type": "Expression"
						},
						"storageAccountKeySecretName": {
							"value": "@dataset().storageAccountKeySecretName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"storageAccountName": {
						"type": "string"
					},
					"storageAccountKeySecretName": {
						"type": "string"
					},
					"container": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GENERIC"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_ABS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_AFS_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADF_GEN_AFS",
					"type": "LinkedServiceReference",
					"parameters": {
						"akvSecretname": {
							"value": "@dataset().akvSecretname",
							"type": "Expression"
						},
						"storageAccount": {
							"value": "@dataset().storageAccount",
							"type": "Expression"
						},
						"fileShare": {
							"value": "@dataset().fileShare",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"akvSecretname": {
						"type": "string"
					},
					"storageAccount": {
						"type": "string"
					},
					"fileShare": {
						"type": "string"
					},
					"filePath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GENERIC"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_AFS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_AFS_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADF_GEN_AFS",
					"type": "LinkedServiceReference",
					"parameters": {
						"akvSecretname": {
							"value": "@dataset().akvSecretname",
							"type": "Expression"
						},
						"storageAccount": {
							"value": "@dataset().storageAccount",
							"type": "Expression"
						},
						"fileShare": {
							"value": "@dataset().fileShare",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"akvSecretname": {
						"type": "string"
					},
					"storageAccount": {
						"type": "string"
					},
					"fileShare": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GENERIC"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_AFS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_ATS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADF_GEN_ATS",
					"type": "LinkedServiceReference",
					"parameters": {
						"akvBaseURL": {
							"value": "@dataset().akvBaseURL",
							"type": "Expression"
						},
						"storageAccountKeySecretName": {
							"value": "@dataset().atsStorageAccountKeySecretName",
							"type": "Expression"
						},
						"storageAccountName": {
							"value": "@dataset().atsStorageAccountName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"atsTableName": {
						"type": "string"
					},
					"akvBaseURL": {
						"type": "string"
					},
					"atsStorageAccountKeySecretName": {
						"type": "string"
					},
					"atsStorageAccountName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GENERIC"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().atsTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_ATS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_AFS_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TEST_AFS",
					"type": "LinkedServiceReference",
					"parameters": {
						"akvBaseURL": {
							"value": "@dataset().akvBaseURL",
							"type": "Expression"
						},
						"akvSecretname": {
							"value": "@dataset().akvSecretname",
							"type": "Expression"
						},
						"storageAccount": {
							"value": "@dataset().storageAccount",
							"type": "Expression"
						},
						"fileShare": {
							"value": "@dataset().fileShare",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"akvBaseURL": {
						"type": "string"
					},
					"akvSecretname": {
						"type": "string"
					},
					"storageAccount": {
						"type": "string"
					},
					"fileShare": {
						"type": "string"
					},
					"filePath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TEST_AFS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_AFS_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TEST_AFS",
					"type": "LinkedServiceReference",
					"parameters": {
						"akvBaseURL": {
							"value": "@dataset().akvBaseURL",
							"type": "Expression"
						},
						"akvSecretname": {
							"value": "@dataset().akvSecretname",
							"type": "Expression"
						},
						"storageAccount": {
							"value": "@dataset().storageAccount",
							"type": "Expression"
						},
						"fileShare": {
							"value": "@dataset().fileShare",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"akvBaseURL": {
						"type": "string"
					},
					"akvSecretname": {
						"type": "string"
					},
					"storageAccount": {
						"type": "string"
					},
					"fileShare": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TEST_AFS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_ABS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"storageAccountName": {
						"type": "string"
					},
					"storageAccountKeySecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ADF_GEN_ABS_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_GEN_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().storageAccountKeySecretName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_AFS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"akvSecretname": {
						"type": "string"
					},
					"storageAccount": {
						"type": "string"
					},
					"fileShare": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('ADF_GEN_AFS_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_GEN_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().akvSecretname",
							"type": "Expression"
						}
					},
					"fileShare": "@{linkedService().fileShare}"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_AKV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ADF_GEN_AKV",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ADF_GEN_AKV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_ATS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ADF_GEN_ATS",
				"parameters": {
					"akvBaseURL": {
						"type": "string"
					},
					"storageAccountKeySecretName": {
						"type": "string"
					},
					"storageAccountName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('ADF_GEN_ATS_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_GEN_AKV",
							"type": "LinkedServiceReference",
							"parameters": {}
						},
						"secretName": {
							"value": "@linkedService().storageAccountKeySecretName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_GEN_FUNCTION')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"functionAppURL": {
						"type": "string"
					},
					"secretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('ADF_GEN_FUNCTION_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_GEN_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().secretName",
							"type": "Expression"
						}
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_AKV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_AFS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"akvBaseURL": {
						"type": "string"
					},
					"akvSecretname": {
						"type": "string"
					},
					"storageAccount": {
						"type": "string"
					},
					"fileShare": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('TEST_AFS_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_GEN_AKV",
							"type": "LinkedServiceReference",
							"parameters": {}
						},
						"secretName": {
							"value": "@linkedService().akvSecretname",
							"type": "Expression"
						}
					},
					"fileShare": "@{linkedService().fileShare}"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADF_GEN_AKV')]"
			]
		}
	]
}